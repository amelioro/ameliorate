{
  // lean strict on linting, can reduce strictness if/when things get annoying
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:tailwindcss/recommended",
    "prettier"
  ],
  "plugins": ["functional", "import", "no-relative-import-paths"],
  "overrides": [
    // don't use ts checking for js files https://stackoverflow.com/a/64488475
    {
      "files": ["*.ts", "*.tsx"],
      "extends": [
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked"
      ],
      "plugins": ["@typescript-eslint"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "tsconfigRootDir": ".",
        "project": ["./tsconfig.json"]
      },
      "rules": {
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/no-confusing-void-expression": [
          "error",
          { "ignoreArrowShorthand": true }
        ],
        "@typescript-eslint/restrict-template-expressions": [
          "error",
          {
            "allowAny": true,
            "allowBoolean": true,
            "allowNullish": true,
            "allowNumber": true,
            "allowRegExp": true,
            "allowNever": true
          }
        ],
        // annoying when wanting to overspecify different types that happen to be the same but could become different
        "@typescript-eslint/no-duplicate-type-constituents": "off",
        // annoying to have to dupe this with the js version
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "all",
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_"
          }
        ],
        "no-relative-import-paths/no-relative-import-paths": [
          "error",
          {
            "allowSameFolder": false,
            "rootDir": "src",
            "prefix": "@"
          }
        ]
      }
    }
  ],
  "rules": {
    "functional/functional-parameters": [
      "error",
      {
        // want to allow currying with arbitrary arguments e.g. for zustand middleware
        "allowRestParameter": true,
        "enforceParameterCount": false
      }
    ],
    "functional/immutable-data": ["error", { "ignoreIdentifierPattern": ["router"] }],
    "functional/no-classes": "error",
    "functional/no-let": "error",
    "functional/no-loop-statements": "error",
    "functional/no-this-expressions": "error",
    // apparently ts itself checks these https://typescript-eslint.io/troubleshooting/performance-troubleshooting/#eslint-plugin-import
    "import/named": "off",
    "import/namespace": "off",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin", // Built-in imports (come from NodeJS native) go first
          "external",
          "internal",
          ["sibling", "parent"], // <- Relative imports, the sibling and parent types they can be mingled together
          "index",
          "unknown"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc"
        }
      }
    ],
    "no-param-reassign": [
      "error",
      {
        "props": true
      }
    ],
    "no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "react/no-unescaped-entities": "off",
    "sort-imports": [
      "error",
      {
        "ignoreDeclarationSort": true, // don"t want to sort import lines, use eslint-plugin-import instead
        "allowSeparatedGroups": true // separating imports by group seems more readable
      }
    ],
    "tailwindcss/no-custom-classname": [
      "error",
      {
        "cssFiles": [], // don't need this anyway, but the reasonable default causes perf issues https://github.com/francoismassart/eslint-plugin-tailwindcss/issues/276#issuecomment-2076947699
        "whitelist": [
          "nopan",
          "react\\-flow.*",
          "selected",
          "flashlight-mode",
          "spotlight\\-",
          "diagram-node",
          "diagram-edge"
        ]
      }
    ]
  }
}
